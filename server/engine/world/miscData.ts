import { randomValue, randomRange } from "../rolls"
import { weightedRandomFetcher } from "../tools/weightedRandomFetcher"
import { locations } from "./locations"
import { encounters } from "./encounters"
import { profile } from "../npc-generation/profile"
import { createNPC } from "../npc-generation/createNPC"
import { plothooks } from "../plothook/plothooks"
import { Town } from "../town/town"
import { Biome } from "../../../shared/types"

interface Misc {
  [key: string]: any
}

export const misc: Misc = {
  bandits: {
    business: [
      `poaching from the sovereign's preserve or a prominent noble’s lands`,
      `harboring fugitives`,
      `harassing government officials and nobles who pass along the road`,
      `robbing caravans carrying gems, precious metals, and exotic goods`,
      `holding up incoming or outgoing ships or wagons`,
      `smuggling smokeleaf; a hallucinogenic mushroom`,
      `smuggling sleepysalt (a downer)`,
      `smuggling sharpsugar (an upper)`,
      `smuggling rare antiquities`,
      `smuggling stolen goods`,
      `smuggling exotic beasts`,
      `smuggling foreign harlots`,
      `smuggling fugitives`,
      `smuggling slaves`,
      `serving as muscle for shady merchants and/or brothel-keepers`,
    ],
    colours: [
      `black`,
      `gold`,
      `forest green`,
      `bronze`,
      `tan`,
      `khaki`,
      `brown`,
      `beaver`,
      `dark grey`,
      `gunmetal`,
      `maroon`,
      `dark brown`,
      `chocolate`,
      `olive green`,
    ],
    symbol: [
      `a skull`,
      `an arrow`,
      `a dagger`,
      `a goblet`,
      `the moon`,
      `a star`,
      `a snake`,
      `a badger`,
      `a spider`,
      `a rat`,
    ],
    leader: [
      `a dangerous megalomaniac`,
      `a charismatic demagogue`,
      `a mysterious foreigner`,
      `a talented thief`,
      `a member of a prominent family`,
      `a ruthless killer`,
      `a femme fatale`,
      `a charming rogue`,
      `a dashing swashbuckler`,
      `a brutish thug`,
    ],
    type: [
      `out-of-work artisans`,
      `displaced peasants`,
      `desperate peasants`,
      `escaped slaves`,
      `combat veterans`,
      `foreign refugees`,
      `goals`,
      `domination of the region’s trade`,
    ],
    goals: [
      `domination of the region’s trade`,
      `sabotage of the region’s trade`,
      `revenge against a rival band of outlaws`,
      `revenge against the region’s elite`,
      `a rebellion against the region’s elite`,
      `equality and freedom for all`,
      `a wealthy and peaceful retirement`,
      `violence to slake their bloodlust`,
    ],
    weapons: [
      `wooden clubs`,
      `over-sized daggers`,
      `shortbows and arrows`,
      `longbows and arrows`,
      `daggers and crossbows`,
      `axes and knives`,
      `sticks and stones`,
      `shortswords`,
      `brass knuckles`,
      `daggers and sling shots`,
    ],
    lair: [
      `the residence of a prominent noble`,
      `the village’s market square`,
      `a wayside inn`,
      `a tavern`,
      `a brothel`,
      `an old lighthouse`,
      `an abandoned cabin`,
      `a waterfall`,
      `a cave`,
      `a dense forest`,
    ],
    fearedBy: [
      `ambassadors and tax collectors`,
      `merchants and peddlers`,
      `politicians and magistrates`,
      `guards and sheriffs`,
      `soldiers and warriors`,
      `nobles and wealthy travelers`,
      `knights and loyalists`,
      `peasants and farmers`,
      `priests and sages`,
      `women and children`,
    ],
    create(town: Town, base = {}) {
      const bandits: any = {
        business: randomValue(misc.bandits.business),
        colours: randomValue(misc.bandits.colours),
        symbol: randomValue(misc.bandits.symbol),
        leader: randomValue(misc.bandits.leader),
        type: randomValue(misc.bandits.type),
        goals: randomValue(misc.bandits.goals),
        weapons: randomValue(misc.bandits.weapons),
        lair: randomValue(misc.bandits.lair),
        fearedBy: randomValue(misc.bandits.fearedBy),
        ...base,
      }
      bandits.readout = `These bandits are ${bandits.type} whose primary business is ${bandits.business}. Their leader is ${bandits.leader}, who wants ${bandits.goals}. Their symbol is ${bandits.symbol} on a ${bandits.colours} background. They are feared by ${bandits.fearedBy}, and they use ${bandits.weapons}. Their base of operations is ${bandits.lair}`
      bandits.tippy = `<span class=tip title=${JSON.stringify(bandits.readout)}><<run setup.tippy("span")>>`
      bandits.tippyWord = `${bandits.tippy}<b>bandits</b></span>`
      return bandits
    },
  },
  newspaper: [
    `NPC attempts to become player, ridiculed.`,
    `Underground homunculi fights discovered - homunculi sales increase.`,
    `Wizard house vanishes in the night, locals suspect shenanigans.`,
    `Doppelganger discovered in mayor's place. Townsfolk agree he's better than the old.`,
    `Tiefling, dragonborn, and hobbit visit tavern, local economy booming. (Adventures visited)`,
    `Werewolf suspected to live in town, buy your silver at Jameson's general store!`,
    `Goblins threaten to kill all townsfolk, distracted by 'shiny things'`,
    `Dragon flies over town, local illusionist jailed.`,
    `Lawyer discovered to be vampire, surprising no one.`,
    `Dwarf and human proclaim love, refused wedding ceremony by cleric.`,
    `Dragon rider gives birth to half dragon.`,
    `Centaur's father jailed for bestially.`,
    `Cultists file for rights to be called clerics.`,
    `Forest gnome discovered in wood elf elementary school, been 'stealing our food for years.'`,
    `Portal to elemental plane discovered, hot springs are rejuvenating says discoverer.`,
    `Fey found making old man's shoes, old man to be jailed for slavery.`,
    `Jack steals gold from 'giant in sky' giants pissed.`,
    `Necromancer family man caught trying to raise a family.`,
    `Drunken old ramblings of future discovered to be 90% accurate.`,
    `Dragonborn day-care suspected to be kobold infiltration team.`,
    `Local dungeon deliver finds 'artefact with a demonic presence' leaves it due to lack of modifiers.`,
    `Travelling circus to visit soon.`,
    `Farmer discovers wishing well works.`,
    `Druid makes farm animals talk, town goes vegetarian.`,
    `Druid threatens to awaken plants.`,
    `House pet discovered to be archdruid.`,
    `30 year old half elf sick of 'being treated like a child.'`,
    `Low level adventurers causing trouble in town; seeking rat infested basement to start them on a long quest.`,
    `Lost: Pet invisible stalker, if found return to Wash gust (Wizard). Poster includes a picture of the pet`,
    `Small medium at large; a poster for an escaped gnomish diviner`,
    `Familiars getting too familiar? Please spay or neuter your animal companions.`,
    `'Blurry face of something, angel or demon? Who knows' Do you trust your sight? MADD Magicians Against Drunken Divining.`,
    `St. Cuthbert's school of phrenology and trepanning`,
    `'Beware of doppelgangers!'`,
    `'Local wizard went missing after experimenting with a bag of holding'`,
    `'You will not believe your eyes when you read what this Halfling found in a dungeon!!!'`,
    `'Apprentice sorcerer blew up himself and started a forest fire'`,
    `'Thieves' guild revealed to be just a rumour'`,
    `'Gnome banished from town after drinking 200 potions of inappropriate yodelling'`,
    `'Banshee was still alive hours before she died!'`,
    `'City unsure why the sewer smells.'`,
    `'City guard's raid smithy, find +1 weapons'`,
    `'Goose attacked by aggressive dog, goose refused medical treatment.'`,
    `'Ilitrasee an obstakul for billboards, studee finds.'`,
    `'Group of adventurers mugged by a parrot.'`,
    `'Guard investigation reveals suspicious gold coin to be a copper coin.'`,
    `'Cows lose their jobs as milk prices drop'`,
    `Seeking apprentice cook/tavern staff`,
    `Seeking wizard to remove awaken from my pots and broom.`,
    `Local wizard apprentice blamed for recent flood, discovered to be awakened mouse`,
    `'Local merchant arrested for selling mimics disguised as furniture and appliances, scheme discovered after customer noticed his refrigerator was running.'`,
    `'Rampaging beast destroys slum, townsfolk celebrate new town square.'`,
    `Local instrument shop has massive blowout on Large-sized Lutes, due to a hilarious misunderstanding with local adventurers.`,
    `Help! Help! I'm being held here and made to write these signs!`,
    `Fourth-annual dwarf-throwing competition dissolves into chaos, bloodshed. 'We're looking forward to the fifth year!' says local dwarven merchant.`,
    `Bloodknife the Deathrager, level 20 Barbarian, buys local farm. Interviewed while re-forging a sword into a ploughshare, he said 'My DM doesn't support Epic levels.'`,
    `Strange ill rumours heard from those fleeing from the north. 'Probably nothing,' agrees city council.`,
    `Local wizard's attempt at opening a portal to the Plane of Uncertain Outcomes has succeeded and failed.`,
    `Local church erupts into violence over the usage of non-blunt weaponry among clergy. 'What's next,' cried a local priest, 'Paladins with no alignment restrictions?!'`,
    `Magical cobblers continue to take heavy losses on sales of Boots of Striding and Springing. Demand continues to drop as more editions are released.`,
    `Copyright permit for 11-foot pole denied by local council. 'It IS different!' cried the merchant, as he was escorted from the premises.`,
    `Market share for d12 weapons at an all time low. A local blacksmith was reached for comment, 'Orcs just ain't buyin' no more.'`,
    `A local village has reached a settlement to recompense a magical tailor for injury and losses sustained after the villagers ran him out of town. The elder of the village said, 'We thought t'were one of them parables! Turns out he does sell invisible cloth. We're truly sorry.'`,
    `Dairy farmer to begin offering 'milk for the Khorne flakes'. In an interview, he says 'Well, I began by getting Chaotic Evil cows.'`,
    `Orcs-no-eat insurance! You want not get eat, you pay us gold. Our motto are, 'Your money or you get eat.'`,
    `A local scientist claims 'Humans are slowly being replaced.' He went on to state that, 'These so-called 'variant humans' look exactly like us, and it is nearly impossible to tell if someone you know is one.'`,
    `The town of Westbrynn is under investigation after allegations surfaced that they are offering incentives for higher level creatures to move into the area. Authorities were tipped off after shipments of +5 weapons were intercepted on their way to the town.`,
    `Steampunk genres threaten takeover. Coastal wizards decline to comment`,
    `Lvl 3 familiars unionized! Necromancers at a loss for words`,
    `Gravity subject to change over the next few weeks: alchemists give assurances`,
    `Due to the recent rise in tectonic activity, all elemental mages are advised to avoid using materials near riverbanks and volcanoes`,
    `Dragon scale market plummets as advances in metalwork create stronger materials`,
    `Recent reports confirm health potions to cause loss in bone density. Heavy users of these potions argue that they usually don't live long enough to be effected`,
    `Theoretical alchemists argue the universe was created in a failed transmutation event coined 'The Big Bang'`,
    `'Local gangsters are putting up false notice boards to an excess.'`,
    `Kobold seeks dragon wing for no particular reason.`,
    `Local human scholar in need of parchment urgently.`,
    `Gnome mystic requires escort to deathly swamp.`,
    `Family wedding requires cooks. Will eat any one thing.`,
    `The Order of the Magi requires help in procuring the whereabouts of Magus Ornathuss.`,
    `Animated sword seeks better life; tired of being used in one way relationship.`,
    `Half-elf Baron Faelin Merrybrook found dead at his home. An investigation is still ongoing.`,
    `Finals of the annual tavern brawl to take place tomorrow!`,
    `Doppelganger suffering from identity crisis trying to find purpose in life.`,
    `The Wandering Troupe in town for two days only! Have the minstrels on the run from a bunch of bandits they fleeced and inadvertently involve the characters in their acts.`,
    `Local farmer requires assistance. I am unable to pay you for your troubles I am afraid.`,
    `Dwarf having some trouble removing a ring. The ring is actually a symbiotic ring and has fused with its new owner. It responds well to gluttony, which the dwarf is afflicted by. As the dwarf becomes more charitable, the ring loosens. If anyone wants to wear the ring, it gives 10 temporary hit points at dawn, each day.`,
    `Waresloth seeking help on slow nights.`,
    `Dwarf tossing championship at local tavern, bring your own dwarf.`,
    `Three gnomes in long coat arrested for impersonating human.`,
    `Trigeraian's Used Armour: Eh, it should serve you better than the previous wearer.`,
    `Castle executioner found using illegal muscle enchantments.`,
    `Local elven leader, famously against interracial breeding, found in orc brothel.`,
    `Charngroc's Custom Chimeras: personalized pets for any personality.`,
    `Local oracle revealed to be fraud. 'I just wanted to make a prophet' he says.`,
    `A Capella singing competition finished. Winner was a buomman asking for directions.`,
    `Adventurer teaches blink dog Common. 'Wow. Very language.' comments dog.`,
    `Unidentified kobold mage summons sarrukh. Apocalypse scheduled for 6 PM.`,
    `Evil Lich Necromancer escaped prison. Wanted dead or alive.`,
    `Impersonator discovers his house is a mimic`,
  ],
  patreonCharacters: {
    "Tylien Birchbottom": {
      firstName: `Tylien`,
      lastName: `Birchbottom`,
      /* name: "Tylien Birchbottom", */
      gender: `man`,
      age: `about twenty four`,
      ageYears: 24,
      hasClass: true,
      isThrowaway: false,
      race: `halfling`,
      dndClass: `warlock`,
      height: `rather diminuitive`,
      heightRoll: 34,
      // weightRoll:
      weight: `small and light`,
      idle: [`gently whispering to his petrified mouse`, `writing something in a well-worn notebook`],
      background: `outlander`,
      hairColour: `brown`,
      hairType: `wispy`,
      scar: `lashes on his back that have scarred over`,
      physicalTrait: `lashes on his back that have scarred over`,
      trait: `constantly forgets things, and has to write things down in his journal to be able to remember them properly.`,
      greeting: [`nods at you`, `welcomes you warmly`, `smiles and greets you`, `raises a hand with a wave`],
      dndClassOrigin: `I've been making a decent living hunting game, selling the pelts to the blacksmith for spare change. I'm searching for a cure to my memory decay- every day, I have to write more things down. I need to learn why these things are happening to me... To find out who or whatever the beast of shadows that stalks me is.`,
      backgroundOrigin: `I was kidnapped by a cult at the age of 14. They used me in a ritual to summon an ancient being known as 'the beast of shadows'. Half-way through, guards rescued me. Things got better, and then got a lot worse- I woke speaking tongues, and found myself losing time. As my powers grew, so did my lost time, so I started to keep a journal. Nowadays I can barely remember more than a week into my past now.`,
      owner: `owner`,
      calmTrait: `unintentionally funny`,
      stressTrait: `distant`,
      vocalPattern: `speaks rather quickly`,
      note: `Tylien is Patreon supporter Jasher Drake's PC.`,
    },
    "Galder Fendt": {
      firstName: `Galder`,
      lastName: `Fendt`,
      name: `Galder Fendt`,
      gender: `man`,
      age: `venerable`,
      eyes: `green`,
      ageYears: 84,
      hasClass: true,
      isThrowaway: false,
      race: `human`,
      height: `some five and a half feet`,
      heightRoll: 66,
      weight: `slightly pot-bellied`,
      hairColour: `brilliant white`,
      scar: `a faint cut of a Drow dagger from a long-forgotten skirmish`,
      beard: `a quite respectable beard`,
      physicalTrait: `a respectable beard`,
      trait: `doesn't like to boast, and lets his enemies' perception of an unassuming old man be their downfall.`,
      calmTrait: `quiet`,
      stressTrait: `distant`,
      vocalPattern: `speaks slowly and deliberately`,
      idle: [],
      dndClass: `wizard`,
      background: `sage`,
      dndClassOrigin: ``,
      backgroundOrigin: ``,
      note: `Galder Fendt is the wizard of /u/SomeHairyGuy, a Reddit user who suffered from advanced pelvic RMS. It's his wish that his character, Galder, be used in games around the world. #CreateAgainstCancer`,
    },
    "Brugo Gul'Moth": {
      firstName: `Brugo`,
      lastName: `Gul'Moth`,
      name: `Brugo Gul'Moth`,
      gender: `man`,
      age: `some eighteen years old`,
      eyes: `red`,
      ageYears: 18,
      race: `half-orc`,
      height: `tall, but with a bit of a slouch`,
      heightRoll: 72,
      weight: `muscular`,
      weightRoll: 180,
      hairColour: `shaved bald`,
      hairType: `shiny`,
      scar: `scars everywhere. Not even in cool places. Just everywhere. Hands, legs, arms, chest, back, neck, face, ears, knees, some too close to the groin.`,
      beard: `a quite respectable beard`,
      physicalTrait: `a respectable beard`,
      inventory: `a ritual wooden mask`,
      trait: `Brugo always tries to relate to people through pain, which is often not a great topic for conversation`,
      stressTrait: `begin to hurt himself when under stress. Scratching, hitting, and biting his lip. Never hurts himself with a weapon or to do permanent damage`,
      calmTrait: `stoic and pensive. Brugo likes to observe the world and people around him when he has a peaceful moment.`,
      vocalPattern: `speak in third person. <descriptive>Hello friend! Brugo has happy to see you! Brugo also have bad commonspeak. Is nature. What is "head-you-kay-shun?" Brugo understand your pain. See? This is where Brugo have scar. 12 years old, mountain lion. Brugo last 5 minutes before elders have to rescue. Claw pain was not bad. The true pain was shame. This why Brugo understand. Brugo is friends with you now? Hmm! (Hmm! = Brugo humming+grunting in a way that can be approval, "OK," excitement, or generally any positive affirmation that he cannot find the words to describe). It is his catch-phrase. "Hey Brugo, do you like ale?" "HMM!" "I almost died of hypothermia one time when I was young." "Hmm, Brugo know this pain." "My mother died when I was a baby." "Hmm, Brugo feel this third pain. Please explain third pain with more story, because Brugo have no mother. So Brugo cannot know this pain."</descriptive>`,
      idle: [
        `Brugo stares at his blood-red, wooden ritual mask, which is carved with an incredible number of horrible and frightening scars.`,
      ],
      dndClass: `monk`,
      hasClass: true,
      isThrowaway: false,
      background: `cultist`,
      familyUnit: `Brugo's single father; Brugo has no clue who his mother was.`,
      parentalLineage: `Brugo's father was an orc, and his mother a human. He doesn't know who she was, though.`,
      dndClassOrigin: `Brugo has always liked fight. Brugo discover that being punched is most common pain among outsiders. So Brugo decide that is friendliest profession. Brugo tried other pains but outsiders were lot more scared of them. Brugo get respect for good punches for curious reason.`,
      backgroundOrigin: `Brugo is Son of Gul, Leader of the Cult of Pain. Brugo is of age to be sent on the Pain Quest to discover new methods of pain. Brugo must etch a new scar in ritual mask for each new pain learned.`,
      note: `Brugo is the character of Patreon supporter NaviSaysListen.`,
    },
  },
  roleplayQuestions: {
    create() {
      return randomValue(misc.roleplayQuestions.array)
    },
    array: [
      `what was a bad memory of your family?`,
      `what was a good memory of your family?`,
      `what is a faction you strongly agree with?`,
      `what is a faction you strongly disagree with?`,
      `what is a game you like to play?`,
      `what was a happy moment from your childhood?`,
      `what is a monster that you don't believe is real?`,
      `is there a person you are afraid of?`,
      `was there ever a person you couldn't help?`,
      `is there a person you hate?`,
      `is there someone you love?`,
      `who do you respect?`,
      `is there a person you want to meet?`,
      `is there a place you would love to visit?`,
      `what was a sad moment from your childhood?`,
      `what was a time you embarrassed yourself?`,
      `what was a time you got away with something?`,
      `what was a time you got a sibling into trouble?`,
      `what was a time you got really drunk?`,
      `what was a time you hurt someone?`,
      `what was a time you made something?`,
      `what was a time you were afraid?`,
      `what was a time you were heroic?`,
      `what was a time you were powerless?`,
      `what was a time you were proud of someone?`,
      `what was a time you were smarter than everyone else?`,
      `are you a dog person or a cat person?`,
      `are you closer to your mother or your father?`,
      `is there a food that you think is disgusting?`,
      `what was something that happened on your last birthday?`,
      `is there something you are ashamed of?`,
      `is there something you are proud of doing?`,
      `what is something you would love to do?`,
      `what was the best dinner you've ever had?`,
      `what was the best gift you ever received?`,
      `what was the funniest thing you've ever seen?`,
      `what are you looking forward to?`,
      `what would you do if you were king?`,
      `what would you do with a million gold pieces?`,
      `where are your family now?`,
      `who or what would you die for?`,
      `who was your first kiss?`,
      `why are you with the party?`,
      `why would the party fall apart without you?`,
      `can you share your favourite story?`,
      `can you share your favourite thing about your hometown?`,
      `what is your favourite way to relax?`,
      `what has been your greatest achievement?`,
      `what is your greatest fear?`,
      `what was your last nightmare?`,
    ],
  },
  religion: {
    shrine: {
      create(town: Town, base = {}) {
        const sensesArray = randomValue(Object.keys(misc.religion.shrine.senses))
        const shrine: any = {
          god: randomValue([
            randomValue(misc.religion.namedGod),
            randomValue(misc.religion.abstractGod),
            randomValue(misc.religion.saint),
          ]),
          material: randomValue(misc.religion.shrine.material),
          senses: misc.religion.shrine.senses[sensesArray](town),
          ...base,
        }
        shrine.readout = `You come across a shrine dedicated to ${shrine.god}. The shrine is ${shrine.material} ${shrine.senses}`
        shrine.tippy = `<span class=tip title=${JSON.stringify(shrine.readout)}><<run setup.tippy("span")>>`
        shrine.tippyWord = `${shrine.tippy}<b>shrine</b></span>`
        return shrine
      },
      // the shrine is _______.
      material: [
        `sculpted marble.`,
        `chiseled oak.`,
        `an old tree stump that has been carved into shape.`,
        `a huge statue made out of a common rock.`,
        `a respectable statue, inlaid with some semi-precious gems.`,
        `a rock pool with a simple altar.`,
        `a tiny structure, with an incense holder and dais sheltered by the roof.`,
        `some planks that are painted.`,
        `a boulder that has been chiseled into shape.`,
        `an artistic arrangement of rocks, logs, and natural materials.`,
        `little more than a lectern with some religious symbols carved into it.`,
        `made out of pottery.`,
        `clay, moulded and coaxed into shape.`,
        `some sort of rock, although it is now covered in a thick moss.`,
        `some type of clay that is visibly wet.`,
        `little more than a couple rocks symbolically arranged.`,
        `a natural geode that has been carved into shape. The hollow inside shines brilliant colours.`,
      ],
      senses: {
        incense() {
          return `You can smell the soft scent of incense having been burnt here.`
        },
        "wood chimes"() {
          return `The soft clattering of some wooden chimes can be heard in the distance.`
        },
        candle() {
          return `There's a melted candle on top of the shrine.`
        },
        wax() {
          return `There's some blobs of melted wax on the shrine.`
        },
        pen() {
          return `An ink pen has been left on top of the shrine, and there are some ink stains splashed on the ground.`
        },
        bread() {
          return `A slice of bread is on the ground, slightly trodden on and thoroughly stale.`
        },
        deadBird() {
          return `You can smell something rotten. Peering around the shrine, you see the corpse of a bird decomposing. Nearby, there is another, with flies buzzing around it.`
        },
        cat() {
          const cat = misc.cat.create()
          return `You hear a soft meow, and see that there's a ${cat.tippyWord} sitting near the shrine, watching you.`
        },
        hissingCat() {
          const cat = misc.cat.create()
          return `You hear a hissing sound, and see that there's a ${cat.tippyWord} sitting near the shrine, almost guarding it.`
        },
        bedding() {
          return `You can see some bedding on the ground near the shrine. It's pretty obvious that the owner left in a hurry.`
        },
        beddingWithNPC(town: Town) {
          const npc = createNPC(town)
          return `You can see some bedding on the ground near the shrine. The ${profile(npc, `owner`)} is out hunting.`
        },
      },
    },
    createRelic() {
      const adjective = randomValue([randomValue(misc.religion.holy), randomValue(misc.religion.unholy)])
      const god = randomValue([
        randomValue(misc.religion.namedGod),
        randomValue(misc.religion.abstractGod),
        randomValue(misc.religion.saint),
      ])
      const noun = randomValue(misc.religion.noun)
      return `The ${adjective} ${noun} of ${god}`
    },
    holy: [
      `Airborn`,
      `Almighty`,
      `Ancient`,
      `Ascendant`,
      `Blessed`,
      `Blue`,
      `Bronze`,
      `Burning`,
      `Ceaseless`,
      `Celestial`,
      `Charming`,
      `Colossal`,
      `Consecarted`,
      `Crystal`,
      `Curing`,
      `Diamond`,
      `Emerald`,
      `Eminent`,
      `Eternal`,
      `Ethereal`,
      `Everlasting`,
      `Fabled`,
      `Famous`,
      `Feathered`,
      `Flaming`,
      `Floating`,
      `Flying`,
      `Forceful`,
      `Gentle`,
      `Ghostly`,
      `Glass`,
      `Glorious`,
      `Glowing`,
      `Golden`,
      `Granite`,
      `Green`,
      `Grey`,
      `Healing`,
      `Heavenly`,
      `Holiest`,
      `Holy`,
      `Illuminated`,
      `Inexorable`,
      `Invincible`,
      `Just`,
      `Learned`,
      `Legendary`,
      `Life`,
      `Lighted`,
      `Lightning`,
      `Lofty`,
      `Long Lost`,
      `Lost`,
      `Lucky`,
      `Medicinal`,
      `Mighty`,
      `Moonstone`,
      `Oaken`,
      `Peaceful`,
      `Pious`,
      `Platinum`,
      `Praising`,
      `Pristine`,
      `Radiant`,
      `Red`,
      `Reflecting`,
      `Regenerating`,
      `Restoring`,
      `Righteous`,
      `Sacred`,
      `Sanctified`,
      `Sapphire`,
      `Secret`,
      `Shielding`,
      `Shining`,
      `Silk`,
      `Silver`,
      `Singing`,
      `Skyborn`,
      `Soaring`,
      `Steel`,
      `Stone`,
      `Storied`,
      `Sunstone`,
      `Thundering`,
      `Titanic`,
      `Unstoppable`,
      `Untouchable`,
      `Unyielding`,
      `Virtuous`,
      `Vorpal`,
      `Warding`,
      `Watchful`,
      `Whistling`,
      `White`,
      `Wind`,
      `Winged`,
      `Wise`,
      `Wooden`,
      `Yellow`,
    ],
    unholy: [
      `Abyssal`,
      `Acid`,
      `Ancient`,
      `Ashen`,
      `Black`,
      `Blackened`,
      `Blacksteel`,
      `Blasphemous`,
      `Bloodstone`,
      `Bony`,
      `Brass`,
      `Brutal`,
      `Burning`,
      `Callous`,
      `Chained`,
      `Charming`,
      `Clawed`,
      `Crawling`,
      `Cruel`,
      `Cursed`,
      `Dark`,
      `Darkstone`,
      `Deathly`,
      `Decaying`,
      `Desecrated`,
      `Diseased`,
      `Disentegrating`,
      `Dragonfang`,
      `Dragonscale`,
      `Eternal`,
      `Exploding`,
      `Fabled`,
      `Fallen`,
      `Fell`,
      `Flaming`,
      `Flying`,
      `Forgotten`,
      `Frightful`,
      `Ghostly`,
      `Ghoulish`,
      `Glass`,
      `Gloom`,
      `Golden`,
      `Grey`,
      `Hellborn`,
      `Hellish`,
      `Hellish`,
      `Howling`,
      `Indomitable`,
      `Infamous`,
      `Infernal`,
      `Iron`,
      `Irresistible`,
      `Jade`,
      `Jagged`,
      `Leathery`,
      `Legendary`,
      `Lightning`,
      `Lost`,
      `Magma`,
      `Mighty`,
      `Moonstone`,
      `Necrotic`,
      `Obsidian`,
      `Poisoned`,
      `Profane`,
      `Rotting`,
      `Ruby`,
      `Rusty`,
      `Sacred`,
      `Scaly`,
      `Secret`,
      `Serrated`,
      `Shadow`,
      `Silver`,
      `Sinking`,
      `Slithering`,
      `Sly`,
      `Smoky`,
      `Spectral`,
      `Spiked`,
      `Starborn`,
      `Stone`,
      `Thorny`,
      `Thundering`,
      `Toothy`,
      `Tormenting`,
      `Tricky`,
      `Tyrranical`,
      `Undying`,
      `Unholy`,
      `Unlucky`,
      `Vain`,
      `Vile`,
      `Watchful`,
      `Whispering`,
      `Wicked`,
      `Winged`,
      `Wounding`,
      `Yellow`,
    ],
    noun: [
      `Amulet`,
      `Ark`,
      `Arrow`,
      `Axe`,
      `Baldric`,
      `Barrel`,
      `Basin`,
      `Belt`,
      `Blade`,
      `Bones`,
      `Boots`,
      `Bow`,
      `Bowl`,
      `Bracers`,
      `Breastplate`,
      `Buckler`,
      `Candle`,
      `Chainmail`,
      `Chains`,
      `Chalice`,
      `Chest`,
      `Circlet`,
      `Claw`,
      `Cloak`,
      `Coat`,
      `Coffin`,
      `Crown`,
      `Cudgel`,
      `Cup`,
      `Dagger`,
      `Drum`,
      `Ear`,
      `Earrings`,
      `Epistles`,
      `Feather`,
      `Finger`,
      `Flail`,
      `Flute`,
      `Foot`,
      `Gauntlets`,
      `Gem`,
      `Globe`,
      `Goblet`,
      `Hammer`,
      `Hand`,
      `Harp`,
      `Helm`,
      `Horn`,
      `Kettle`,
      `Knife`,
      `Knot`,
      `Lantern`,
      `Light`,
      `Longsword`,
      `Mace`,
      `Mask`,
      `Mirror`,
      `Morningstar`,
      `Nail`,
      `Necklace`,
      `Orb`,
      `Pestle`,
      `Purse`,
      `Quarterstaff`,
      `Quill`,
      `Ring`,
      `Robe`,
      `Rod`,
      `Sandals`,
      `Sarcophagus`,
      `Scab`,
      `Scales`,
      `Scepter`,
      `Scroll`,
      `Shield`,
      `Shoes`,
      `Shortsword`,
      `Shroud`,
      `Shrubbery`,
      `Signet`,
      `Skull`,
      `Snout`,
      `Spear`,
      `Splinter`,
      `Spoon`,
      `Staff`,
      `Sword`,
      `Talisman`,
      `Toe`,
      `Tome`,
      `Tongue`,
      `Tooth`,
      `Torch`,
      `Tresses`,
      `Tunic`,
      `Vial`,
      `Wand`,
      `Wart`,
      `Whip`,
      `Wings`,
    ],
    namedGod: [
      `Annam`,
      `Asmodeus`,
      `Auril`,
      `Avandra`,
      `Azuth`,
      `Bahamut`,
      `Bane`,
      `Baphomet`,
      `Beory`,
      `Bhaal`,
      `Boccob`,
      `Celestian`,
      `Chauntea`,
      `Corellon Larethian`,
      `Cyndor`,
      `Cyric`,
      `Daern`,
      `Demogorgon`,
      `Deneir`,
      `Doresain`,
      `Ehlonna`,
      `Eldath`,
      `Erathis`,
      `Erythnul`,
      `Fharlanghn`,
      `Garl Glittergold`,
      `Gond`,
      `Gruumsh`,
      `Halmyr`,
      `Heironeous`,
      `Helm`,
      `Heward`,
      `Hextor`,
      `Ilmater`,
      `Incabulos`,
      `Ioun`,
      `Istus`,
      `Iuz`,
      `Joramy`,
      `Kelanen`,
      `Kelemvor`,
      `Keoghtom`,
      `Khala`,
      `Kord`,
      `Kurtulmak`,
      `Kyuss`,
      `Lathander`,
      `Leira`,
      `Liliira`,
      `Lolth`,
      `Loviatar`,
      `Maglubiyet`,
      `Malar`,
      `Mask`,
      `Melora`,
      `Mielikki`,
      `Milil`,
      `Moradin`,
      `Myrkul`,
      `Mystra`,
      `Nerull`,
      `Obad-Hai`,
      `Oghma`,
      `Olidammara`,
      `Orcus`,
      `Pelor`,
      `Pholtus`,
      `Procan`,
      `Pyremius`,
      `Rao`,
      `Saint Cuthbert`,
      `Savras`,
      `Sehanine Moonbow`,
      `Selune`,
      `Shar`,
      `Silvanas`,
      `Sune`,
      `Talona`,
      `Talos`,
      `Tempus`,
      `Tharizdun`,
      `the Raven Queen`,
      `Tiamat`,
      `Torm`,
      `Torog`,
      `Tymora`,
      `Typhos`,
      `Tyr`,
      `Umberlee`,
      `Umberlee`,
      `Urbanus`,
      `Vaprak`,
      `Vecna`,
      `Waukeen`,
      `Wee Jas`,
      `Yeenoghu`,
      `Yondalla`,
      `Zagyg`,
      `Zehir`,
      `Zoser`,
    ],
    abstractGod: [
      `Our Lady`,
      `Our Mother`,
      `the Ancient Flame`,
      `the Ancient Oak`,
      `the Autumn Singer`,
      `the Bat`,
      `the Battle-Lord`,
      `the Bear`,
      `the Beast`,
      `the Beast-Tamer`,
      `the Beast-Wife`,
      `the Beauty Queen`,
      `the Blood-Bringer`,
      `the Burning Man`,
      `the Crone`,
      `the Cruel King`,
      `the Dark Lady`,
      `the Dark Lord`,
      `the Dark Prophet`,
      `the Death Harbinger`,
      `the Doom Harbinger`,
      `the Doom-Maker`,
      `the Eagle`,
      `the Earth-Mother`,
      `the Earth-Queen`,
      `the Enemy`,
      `the Eternal Light`,
      `the Eternal Sage`,
      `the Fair Maiden`,
      `the Fatespinner`,
      `the Felled Tree`,
      `the Fire Dragon`,
      `the Forest Keeper`,
      `the Frog`,
      `the Gloom-Spider`,
      `the Goddess`,
      `the Grain-Grower`,
      `the Great Huntress`,
      `the Great Protector`,
      `the Great Smith`,
      `the Horned One`,
      `the Judge`,
      `the King Beneath the Waves`,
      `the Lawgiver`,
      `the Life-Keeper`,
      `the Life-Tree`,
      `the Light's Son`,
      `the Magic-Maid`,
      `the Messenger`,
      `the Mighty Hunter`,
      `the Mighty One`,
      `the Mighty Warrior`,
      `the Mischief-Maker`,
      `the Moon-Witch`,
      `the Mountain Forger`,
      `the Night Queen`,
      `the Oathkeeper`,
      `the Oracle`,
      `the Prophet`,
      `the Sacred Grove`,
      `the Savior`,
      `the Scorpion`,
      `the Sea Dragon`,
      `the Sea God`,
      `the Sea Queen`,
      `the Seductress`,
      `the Shadow`,
      `the Shadowkeeper`,
      `the Shadow-Serpent`,
      `the Shield-Maiden`,
      `the Ship-Taker`,
      `the Sky Father`,
      `the Soothsayer`,
      `the Soul-Collector`,
      `the Soul-Eater`,
      `the Spider`,
      `the Spring Maiden`,
      `the Starfinder`,
      `the Stone Dragon`,
      `the Storm Dragon`,
      `the Storm King`,
      `the Storm-Bringer`,
      `the Summer Mistress`,
      `the Sunkeeper`,
      `the Sword-Prince`,
      `the Thief`,
      `the Tormenter`,
      `the Tree Spirit`,
      `the Undying Light`,
      `the Unnamed One`,
      `the Unyielding Tyrant`,
      `the Voice`,
      `the Wandering Rogue`,
      `the War-Maker`,
      `the Watcher`,
      `the Watchful Eye`,
      `the Wind King`,
      `the Winemaker`,
      `the Winter Lady`,
      `the Wolf`,
    ],
    saint: [
      `Almar the Holy`,
      `Amaya the Seeress`,
      `Bahak the Preacher`,
      `Bahruz the Prophet`,
      `Lira the Flamekeeper`,
      `Mozar the Conqueror`,
      `Prince Tarunal`,
      `Queen Kalissa`,
      `Rahal the Sunsoul`,
      `Raham the Lightbringer`,
      `St. Aemilia`,
      `St. Albus`,
      `St. Anglos`,
      `St. Antonia`,
      `St. Antonus`,
      `St. Austyn`,
      `St. Bardo`,
      `St. Beatrix`,
      `St. Berta`,
      `St. Bettius`,
      `St. Bryenn`,
      `St. Buttercup`,
      `St. Carolo`,
      `St. Cedrick`,
      `St. Cordelia`,
      `St. Cowhan`,
      `St. Cumberbund`,
      `St. Dorys`,
      `St. Dreddos`,
      `St. Dwayn`,
      `St. Edwynna`,
      `St. Elayne`,
      `St. Falstyus`,
      `St. Farcas`,
      `St. Florenzo`,
      `St. Gabrella`,
      `St. Gaiorgus`,
      `St. Goodkynd`,
      `St. Hal`,
      `St. Halcincas`,
      `St. Haroldus`,
      `St. Hemingwar`,
      `St. Heraclora`,
      `St. Hermioninny`,
      `St. Hieronymus`,
      `St. Inigo`,
      `St. Jordyn`,
      `St. Katrynn`,
      `St. Lannus`,
      `St. Leo`,
      `St. Leryo`,
      `St. Londyn`,
      `St. Magio`,
      `St. Marius`,
      `St. Markuz`,
      `St. Martyn`,
      `St. Matromus`,
      `St. Morrsona`,
      `St. Morwayne`,
      `St. Murkel`,
      `St. Mychel`,
      `St. Nyneva`,
      `St. Paolo`,
      `St. Parrinus`,
      `St. Perseon`,
      `St. Petyr`,
      `St. Podryck`,
      `St. Polly`,
      `St. Pratchytt`,
      `St. Rawynn`,
      `St. Regus`,
      `St. Ricarddos`,
      `St. Roberts`,
      `St. Robinus`,
      `St. Rowhan`,
      `St. Rowlynna`,
      `St. Sansima`,
      `St. Sessimus`,
      `St. Severus`,
      `St. Stynebick`,
      `St. Symeon`,
      `St. Theseon`,
      `St. Thoryn`,
      `St. Tolkkyn`,
      `St. Twayn`,
      `St. Xavos`,
      `the Deliverer`,
      `the Doomcaller`,
      `the Doomsayer`,
      `the Lawgiver`,
      `the Oracle`,
      `the Prophet`,
      `the Savior`,
      `the Seeker`,
      `the Shadowseer`,
      `the Soothsayer`,
      `the Starwatcher`,
      `the Truthsayer`,
      `the Voice`,
      `Zefar the Sorcer`,
    ],
  },
  town: {
    create(town: Town) {
      return weightedRandomFetcher(town, plothooks, ``, misc.town.type.event)
    },
    type: {
      event(town: Town, arg: any) {
        return arg.type.includes(`event`)
      },
      paper(town: Town, arg: any) {
        return arg.type.includes(`paper`)
      },
    },
  },
  desert: {
    create(town: Town) {
      let encounter
      let encounterKey
      if (randomRange(1, 100) >= 50) {
        encounterKey = randomValue(misc.desert.location)
        encounter = locations[encounterKey](town, Biome.Desert)
      } else {
        encounterKey = randomValue(misc.desert.encounters)
        encounter = encounters[encounterKey](town)
      }
      console.log(encounterKey)
      return `${randomValue([`While`, `As`, `After a while, as`])} you ${randomValue([
        `traverse`,
        `trudge along`,
        `travel across`,
        `walk across`,
      ])} the desert, you see ${randomValue(misc.desert.landmark)}. You notice ${randomValue(
        misc.desert.feature
      )}. Up ahead, you see ${encounter}`
    },
    location: [
      `a cavern in a canyon wall`,
      `a cave entrance, hidden by a boulder`,
      `an entrance to a rocky cave`,
      `a small cave next to a dry river bed`,
      `an old mine in a canyon`,
      `an active mining camp`,
      `a hole under a large boulder`,
      `a large burrow`,
      `an abandoned stone house`,
      `a stone house`,
      `an abandoned campsite`,
      `a merchant caravan's camp`,
      `a peculiar tent`,
      `an old watchtower`,
      `ruins of an ancient city`,
      `a temple ruin`,
      `a village of primitive canyon dwellers`,
      `some nomad's camp`,
      `an ancient tomb`,
      `a shrine`,
    ],
    landmark: [
      `an oasis with a fruit tree`,
      `an oasis with a palm tree and some desert flowers`,
      `an unusually large, prickly desert plant`,
      `a pair of prickly plants from the same root`,
      `a patch of desert flowers in the shade of a boulder`,
      `a patch of damp sand in the shadow of a large boulder`,
      `a rocky bluff`,
      `a boulder shaped like a face`,
      `a pair of identical boulders, side by side`,
      `a boulder sitting atop a larger boulder`,
      `a narrow gorge with a trickle of water`,
      `a wide canyon with a trickle of water`,
      `a dry river bed`,
      `a swiftly flowing, shallow river in a canyon`,
      `a muddy river bed`,
      `a ridge of wind-eroded rock`,
      `a ridge of jagged rock`,
      `a mostly-buried, ancient monument`,
      `twelve large stones, deliberately arranged in a ring`,
      `a sheer rock wall with patterns of color in the rock layers`,
    ],
    feature: [
      `a buzzard circles overhead`,
      `a vulture screams`,
      `a scorpion scuttles away`,
      `a large beetle scuttles away`,
      `a toad hops behind a rock`,
      `a lizard crawls under a rock`,
      `a jackal barks`,
      `a snake slithers away`,
      `a butterfly flutters by`,
      `a rattlesnake sounds`,
      `an unusual bird chirps`,
      `a gentle breeze blows`,
      `the wind blows harder`,
      `the wind kicks up dust`,
      `small loose stones tumble down a slope`,
      `a hint of moisture on the ground`,
      `a prickly plant with brightly colored fruit`,
      `a strange desert flower`,
      `a small palm tree`,
      `several small prickly plants`,
    ],
    landscape: [`rocky`, `hilly`, `bleak`, `rugged`, `boulder-strewn`, `forbidding`, `jagged`, `wind-swept`],
    ground: [`sandy`, `pebbly`, `cracked`, `hard-packed`, `pale brown`, `muddy brown`, `deep red`, `grey`],
    encounters: [
      `a strange hermit`,
      `a lost traveler`,
      `a poor nomad`,
      `a suspicious miner`,
      `a barbarian hunter`,
      `a mounted barbarian scout`,
      `an orkish war band`,
      `the ghost of a traveler`,
      `a poisonous snake`,
      `a giant spider`,
      `a giant scorpion`,
      `a giant centipede`,
      `a pack of jackals`,
      `a hungry jackalwere`,
      `a giant lizard`,
      `a pair of gnolls`,
      `a pair of bandits`,
      `an hobgoblin scout`,
      `a roc on the wing`,
      `a wyvern on the wing`,
    ],
    cave: [
      `a swarm of beetles`,
      `lots of bats`,
      `many spider webs`,
      `a troll's stash`,
      `an ogre's lair`,
      `some gnolls’ hideout`,
      `bare rock`,
      `mummified remains`,
      `some bandits’ hideout`,
      `a reclusive sorcerer`,
      `some abandoned mining equipment`,
      `a half-mad prophet`,
    ],
    camped: [
      `a merchant of exotic goods`,
      `a misanthropic shapeshifter`,
      `an eccentric monk`,
      `a nomadic herder`,
      `a nomadic warrior`,
      `an outcast elf`,
    ],
    houseLived: [
      `a strange hermit`,
      `a reclusive scholar`,
      `an eccentric healer`,
      `a poor goatherder`,
      `a mining prospector`,
      `a religious fanatic with his many wives`,
    ],
    houseLives: [
      `poisonous snakes`,
      `an ogre`,
      `a pair of orcs`,
      `a mad sorcerer`,
      `a paranoid shapeshifter`,
      `restless ghosts`,
    ],
    ruinsLives: [
      `a treasure hunter`,
      `a wasteland druid`,
      `poisonous snakes`,
      `cursed mummies`,
      `restless ghosts`,
      `a hobgoblin warlord`,
      `an orkish war chief`,
      `a tribe of kobolds`,
      `a territorial griffon`,
      `a pair of manticores`,
      `slavering gnolls`,
      `a dragon`,
    ],
    hazards: [
      `a rockslide coming down a canyon wall`,
      `a boulder rolling down a canyon wall`,
      `a collapsing sand dune`,
      `quicksand`,
      `persistent, strong winds kicking up dust`,
      `a sudden, swirling sandstorm`,
      `a mirage of a city`,
      `a mirage of an oasis`,
    ],
    climate: [
      `once a year for a few days straight`,
      `on a few days scattered through the year`,
      `during the winter months`,
      `never; but snow melting in the mountains waters the land briefly every spring`,
      `never; the land floods briefly once a year`,
      `never; this place hasn’t had water in years`,
    ],
    hole: [`a snake`, `a spider`, `beetles`, `scorpions`, `centipedes`, `a toad`, `a lizard`, `a fox`],
  },
  mountain: {
    create(town: Town) {
      let encounter
      let encounterKey
      if (randomRange(1, 100) >= 50) {
        encounterKey = randomValue(misc.mountain.location)
        console.log(encounterKey)
        encounter = locations[encounterKey](town, Biome.Mountain)
        console.log(encounter)
      } else {
        encounterKey = randomValue(misc.mountain.encounters)
        encounter = encounters[encounterKey](town)
      }
      console.log(encounterKey)
      return `${randomValue([`While`, `As`, `After a while, as`])} you ${randomValue([
        `traverse`,
        `trudge along`,
        `travel across`,
        `walk on`,
      ])} the mountain, you see ${randomValue(misc.mountain.landmark)}. You notice ${randomValue(
        misc.mountain.feature
      )}. Up ahead, you see ${encounter}`
    },
    landmark: [
      `a trickle of water flowing down a rock wall`,
      `a small mountain lake of cold, fresh water`,
      `a swiftly flowing small stream`,
      `a natural bridge between two cliff faces`,
      `a narrow gorge with walls close enough to climb between`,
      `a deep gorge with no bottom in sight`,
      `a set of deliberately stacked stones`,
      `a large boulder eroded by the wind into the shape of a near-perfect sphere`,
      `a group of stones arranged in a circle`,
      `a boulder shaped to resemble a face`,
      `a pair of narrow needle-like peaks`,
      `a chimney-like column of rock`,
      `a large boulder split in half like an egg`,
      `a damp rock wall, covered in moss`,
      `the fossilized bones of a great beast visible in a rock wall `,
      `a thicket of hardy mountain shrubs growing atop a boulder`,
      `a copse of scrawny trees`,
      `a gorge where the wind whistles`,
      `a gorge with a near perfect echo`,
      `a rocky shoulder beneath a snowcap`,
    ],
    feature: [
      `a cache of abandoned, decrepit mining equipment`,
      `some old dry bones`,
      `a small fossilized leaf`,
      `evidence of a recent encampment`,
      `an enormous spider web`,
      `an incredible view`,
      `the clatter of rocks falling`,
      `loose stones underfoot`,
      `an unstable rock wall`,
      `a distant sound—a scream, hammers at work, footsteps, or drums`,
      `the name of a previous traveler carved into a boulder`,
      `an ancient rune carved in a rock wall`,
      `a scrawny tree growing with its roots spread over a small boulder`,
      `the distant cry of a beast—an eagle, a goat, a mountain lion, or a wolf`,
      `the wind whips up to a treacherous speed`,
      `snow flurries begin to fall`,
      `the sound of birds chirping`,
      `a flock of birds takes flight`,
      `an old firepit`,
      `several puddles of cold water`,
    ],
    location: [
      `a cavern behind a waterfall`,
      `an entrance to a rocky cave`,
      `a hole under a sheer cliff face`,
      `a dark tunnel leading under the mountain`,
      `a tunnel in a cliff face`,
      `a tunnel leading into an abandoned mine`,
      `a cozy little cabin`,
      `an abandoned cabin`,
      `an abandoned campsite`,
      `a poorly marked grave or tomb`,
      `an active mining camp`,
      `a strategically located watchtower`,
      `an abandoned watchtower`,
      `an enormous bird’s nest`,
      `a shrine`,
      `an isolated monastery`,
      `a remote temple`,
      `an ancient temple`,
      `a ruined monastery`,
      `a small cave in the crook of a rock wall`,
    ],
    cave: [
      `a mountain lion’s den`,
      `lots of bats`,
      `many spider webs`,
      `a troll's stash`,
      `an ogre's lair`,
      `some goblins' hideout`,
      `some abandoned mining equipment`,
      `bare rock`,
      `a potable spring`,
      `unidentifiable remains`,
      `some outlaws’ hideout`,
      `an orc war band`,
      `a hungry ettin`,
      `a band of dwarvish refugees`,
      `a griffon’s nest`,
      `a manticore’s den`,
      `a basilisk’s lair`,
      `a wyvern’s nest`,
      `a clan of stone giants`,
      `a sleeping dragon`,
    ],
    cabinLives: [
      `an owlbear`,
      `an ogre`,
      `a troll`,
      `a mad witch`,
      `a reclusive shapeshifter`,
      `restless ghosts`,
      `an outcast orc`,
      `a strange hermit`,
    ],
    watchtowerLives: [
      `a disciplined military company`,
      `a rowdy mercenary troop`,
      `a band of desperate outlaws`,
      `a handful of dwarves`,
      `a clan of orcs`,
      `a goblin war party`,
      `several harpies`,
      `ghostly warriors`,
    ],
    encounters: [
      `a lost prospector`,
      `a solemn warrior`,
      `an angry wraith`,
      `a malevolent ghost`,
      `some bandits`,
      `a seasoned mountaineer`,
      `a paranoid shapeshifter`,
      `an ancient vampire`,
      `several homeless dwarves`,
      `an eccentric witch`,
      `a contemplative monk`,
      `a mountain lion`,
      `a pair of harpies`,
      `a flock of ravens`,
      `several orc raiders`,
      `a hunting peryton`,
      `a mated pair of manticores`,
      `a trio of monstrous trolls`,
      `a clan of stone giants at rest`,
      `a roc tearing apart some prey`,
    ],
    cabinLived: [
      `a fugitive from justice`,
      `a stubborn miner`,
      `a dwarvish prospector`,
      `a dwarvish war veteran`,
      `a gnomish wizard`,
      `a mystic sage`,
    ],
    camped: [
      `a party of orc scouts`,
      `a goblin raiding party`,
      `some miners or prospectors`,
      `a pair of wandering elves`,
      `some refugees or fugitives`,
      `someone whose purposes are unclear`,
    ],
    miners: [`greedy dwarves`, `ambitious humans`, `tricky goblins`, `industrious kobolds`],
    minersGoal: [
      `copper`,
      `gems`,
      `gold`,
      `iron`,
      `silver`,
      randomValue([`adamantine`, `electrum`, `mithral`, `platinum`]),
    ],
    mineLives: [
      `carrion crawler`,
      `cloaker`,
      `darkmantle`,
      `dwarves`,
      `fungi`,
      `kobolds`,
      `ghosts`,
      `mimics`,
      `myconids`,
      `ogres`,
      `ooze`,
      `orcs`,
      `otyugh`,
      `piercer`,
      `roper`,
      `rust monster`,
      `stirges`,
      `trolls`,
      `umber hulk`,
      `wraiths`,
    ],
    monasteryBuilt: [
      `an order of elementalist monks`,
      `an order of mystics`,
      `an extremely secretive order of monks`,
      `an order of shadow monks`,
      `an order of warrior monks`,
      `an unknown order of monks`,
    ],
    monasteryHonour: [
      `the sun god`,
      `the god of the heavens`,
      `the moon goddess`,
      `the storm god`,
      `the earth mother goddess`,
      `a long-forgotten god`,
    ],
    nestBuilt: [`a giant eagle`, `a giant owl`, `a clan of harpies`, `a griffon`, `a roc`, `a wyvern`],
    watchtowerBuilt: [
      `an expansive empire`,
      `a nearby kingdom`,
      `an occupying army`,
      `elvish warriors from a past age`,
      `a clan of orcs`,
      `a goblin kingdom`,
    ],
    hazards: [
      `a perilous rockslide`,
      `an icy rime across the path or road`,
      `a tumbling boulder`,
      `loose rocks that make for poor footing`,
      `a large boulder blocking the way`,
      `a place where the path has fallen away leaving a narrow ledge on which to walk`,
      `a place where the path or road slopes steeply down toward a cliff edge`,
      `a sudden storm bringing heavy snow`,
    ],
    religionLives: [
      `a congregation of monks`,
      `a group of nuns`,
      `an ancient religious order`,
      `the last of a holy order`,
      `a squad of exiled templars`,
      `a holy congregation`,
      `a rugged looking bunch of refugees`,
      `a single wise guru`,
      `the spirit of a vengeful god`,
      `the spirits of a religion long forgotten`,
    ],
  },
}
